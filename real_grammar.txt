<program> = <otherFunctions> <mainFunction>
<mainFunction>= TK_MAIN <stmts> TK_END
<otherFunctions>= <function><otherFunctions> | ∈
<function>=TK_FUNID <input_par> <output_par> TK_SEM <stmts> TK_END
<input_par>=TK_INPUT TK_PARAMETER TK_LIST TK_SQL <parameter_list> TK_SQR
<output_par>=TK_OUTPUT TK_PARAMETER TK_LIST TK_SQL <parameter_list> TK_SQR | ∈
<parameter_list>=<dataType> TK_ID <remaining_list>
<dataType>= <primitiveDatatype> |<constructedDatatype>
<primitiveDatatype>= TK_INT | TK_REAL
<constructedDatatype>=TK_RECORD TK_RUID TK_ID | TK_UNION TK_RUID
<constructedDatatype>=TK_RECORD TK_RUID | TK_UNION TK_RUID | TK_RUID
<remaining_list>=TK_COMMA <parameter_list> | ∈
<stmts>=<typeDefinitions> <declarations> <otherStmts><returnStmt>
<typeDefinitions>=<typeDefinition><typeDefinitions> |∈
<typeDefinitions>=<typeDefinition><typeDefinitions> | <definetypestmt> | ∈
<typeDefinition>=TK_RECORD TK_RUID <fieldDefinitions> TK_ENDRECORD
<typeDefinition>=TK_UNION TK_RUID <fieldDefinitions> TK_ENDUNION
<fieldDefinitions>= <fieldDefinition><fieldDefinition><moreFields>
 <fieldDefinition>= TK_TYPE <primitiveDatatype> TK_COLON TK_FIELDID TK_SEM
<fieldDefinition>= TK_TYPE <fieldtype> TK_COLON TK_FIELDID TK_SEM
<fieldtype>=<primitiveDatatype>|TK_RUID
<moreFields>=<fieldDefinition><moreFields> | ∈
<declarations> = <declaration><declarations>|∈
 <declaration>= TK_TYPE <dataType> TK_COLON TK_ID TK_COLON <global_or_not> TK_SEM
<declaration>= TK_TYPE <dataType> TK_COLON TK_ID <global_or_not> TK_SEM
 <global_or_not>=TK_GLOBAL| ∈
<global_or_not>=TK_COLON TK_GLOBAL| ∈
<otherStmts>= <stmt><otherStmts> | ∈
<stmt>= <assignmentStmt> | <iterativeStmt>|<conditionalStmt>|<ioStmt>| <funCallStmt>
<assignmentStmt>=<singleOrRecId> TK_ASSIGNOP <arithmeticExpression> TK_SEM
 <singleOrRecId>=TK_ID | TK_ID TK_DOT TK_FIELDID
<singleOrRecId>=TK_ID | TK_ID TK_DOT <recId> TK_FIELDID
<recId>=TK_FIELDID TK_DOT <recId> | ∈
 <funCallStmt>=<outputParameters> TK_CALL TK_FUNID TK_WITH TK_PARAMETERS <inputParameters>
<funCallStmt>=<outputParameters> TK_CALL TK_FUNID TK_WITH TK_PARAMETERS <inputParameters> TK_SEM;
<outputParameters>  TK_SQL <idList> TK_SQR TK_ASSIGNOP | ∈
<inputParameters>= TK_SQL <idList> TK_SQR
<iterativeStmt>=TK_WHILE TK_OP <booleanExpression>TK_CL <stmt><otherStmts> TK_ENDWHILE
 <conditionalStmt>= TK_IF <booleanExpression> TK_THEN <stmt><otherStmts> TK_ELSE <otherStmts> TK_ENDIF
<conditionalStmt>= TK_IF TK_OP <booleanExpression> TK_CL TK_THEN <stmt><otherStmts> TK_ELSE <stmt><otherStmts> TK_ENDIF
 <conditionalStmt>= TK_IF <booleanExpression> TK_THEN <stmt><otherStmts> TK_ENDIF
<conditionalStmt>= TK_IF TK_OP <booleanExpression> TK_CL TK_THEN <stmt><otherStmts> TK_ENDIF
<ioStmt>=TK_READ TK_OP <var> TK_CL TK_SEM | TK_WRITE TK_OP <var> TK_CL TK_SEM
 <arithmeticExpression>=<arithmeticExpression> <operator> <arithmeticExpression>
 <arithmeticExpression> ==TK_OP <arithmeticExpression> TK_CL | <var>
 <operator> = TK_PLUS | TK_MUL |TK_MINUS|TK_DIV
<arithmeticExpression> = <term> | <term>TK_PLUS <arithmeticExpression> | <term>TK_MINUS <arithmeticExpression> 
<term> = <factor> <termPrime>
<termPrime> = <factor>TK_MUL <termPrime> | <factor>TK_DIVT <termPrime> | ∈
<factor> = TK_OP <arithmeticExpression> TK_CL | <var>

<booleanExpression>=TK_OP<booleanExpression>TK_CL<logicalOp>TK_OP <booleanExpression> TK_CL
<booleanExpression>= <var> <relationalOp> <var>
<booleanExpression>= <var1> <relationalOp> <var1>
<var1>=TK_ID | TK_NUM | TK_RNUM
 <booleanExpression>= TK_NOT <booleanExpression>
<booleanExpression>= TK_NOT TK_OP<booleanExpression> TK_CL | TK_NOT <var>
 <var>= TK_ID | TK_NUM | TK_RNUM
<var>= <var1> | <singleOrRecId>
<logicalOp>=TK_AND | TK_OR
<relationalOp>= TK_LT | TK_LE | TK_EQ |TK_GT | TK_GE | TK_NE
<returnStmt>=TK_RETURN <optionalReturn> TK_SEM
<optionalReturn>=TK_SQL <idList> TK_SQR | ∈
<idList>= TK_ID <more_ids>
<more_ids>= TK_COMMA <idList> | ∈
<definetypestmt>=TK_DEFINETYPE <A> TK_RUID TK_AS TK_RUID
<A>TK_RECORD | TK_UNION

